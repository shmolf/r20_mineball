!function(e){var t={};function n(o){if(t[o])return t[o].exports;var a=t[o]={i:o,l:!1,exports:{}};return e[o].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(o,a,function(t){return e[t]}.bind(null,a));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);class o{constructor(e,t,n,o){this.id=e,this.url=t,this.name=n,this.tag=o}}class a{contructor(e){this.id=e,this.emblem=null}getId(){return this.id}getEmblem(){return this.emblem}setEmblem(e){this.emblem=e}}class r{constructor(){this.helpParam="--help"}}let s=null;function l(){const e=s.map(e=>(e=>`<p><img width='30' src='${e.url}'>\n    <code style='border-radius: 0.25em; user-select: all; border: solid black 1px;'>${e.name}</code></p>`)(e)).join("");sendChat("Mine Ball Help","<p>Choose from one of the available emblems below.</p>\n    <p>You cannot choose an emblem if another player has already selected it.</p>\n    <p>To select an emblem, type\n      <code style='background: #F5F5DC'>!mineball emblem &lt;your selection&gt;</code> in the messages. Example:</p>\n    <pre style='background: #F5F5DC; user-select: all; -webkit-user-select: all'>!mineball emblem three-leaves</pre>\n    "+e)}on("ready",()=>{s=JSON.parse(Campaign().get("token_markers")).forEach(e=>new o(e.id,e.url,e.name,e.tag))});const i={},c={},d=new class extends r{constructor(e){super(),this.cmd="help",this.desc="<p>Provides general help, and a list of all commands.",this.paramList=[],this.func=(t,n,o,a)=>{log(e);const r=Object.keys(e).map(t=>function(e){const t=e.paramList.join(" ");return`<hr><pre>!mineball ${e.cmd} ${t}</pre><p>${e.desc}</p>`}(e[t])).join("");sendChat("Mine Ball Help",`<p>Below is a list of commands available to you, for this game.</p>\n        <p>\n          If you provide <code>${this.helpParam}</code> after some commands, it will provide additional details.\n          Example:\n        </p>\n        <pre>!minecraft emblem ${this.helpParam}</pre>\n        ${r}`)}}}(c);c[d.cmd]=d;const m=new class extends r{constructor(e){super();const t=e;this.cmd="emblem",this.desc=`Command is used to join the game, and declare/change what emblem will represent you as a player.\n      The emblem will be represented on all of your cards. (${this.helpParam} avail)`,this.paramList=["emblemName"],this.func=function(n,o,r,i){if(i.includes(this.helpParam))return l(),e;const c=i.shift(),d=s.map(e=>e.name).indexOf(c);if(void 0===c||-1===d)return sendChat(o,"Need to provide a valid Emblem choice."),l(),e;r in e||(t[r]=new a(r));const m=e[r];return m.setEmblem(s[d]),sendChat(o,`You are now <img width='30' src='${m.getEmblem().url}'>`),t}}}(i);c[m.cmd]=m;const u=new class extends r{constructor(e){super(),this.cmd="whoami",this.desc="Informs you of which emblem belongs to you, and thereby which cards you should control.",this.paramList=[],this.func=(t,n,o,a)=>{if(o in e){const t=e[o];sendChat(n,`You are <img width='30' src='${t.getEmblem().url}'>`)}else sendChat(n,"You are not yet a player in the game. Use the <code>!mineball help</code>\n          command to understand how to join.")}}}(i);function p(e){if("api"!==e.type)return;const t=(getObj("player",e.playerid)||{get:()=>"API"}).get("_displayname"),n=e.playerid,o=e.content.split(/\s+/);if("!mineball"!==o.shift()||0===o.length)return;const a=o.shift().toLowerCase();switch(a){case m.cmd:Object.assign(i,c[a].func(e,t,n,o));break;case u.cmd:c[a].func(e,t,n,o);break;case d.cmd:default:d.func(e,t,n,o)}}function h(e,t){log(["movement token",e]),log(["movement tokenPrev",t])}function f(e){log(["newToken",e])}function b(e,t){log(["movement card",e]),log(["movement cardPrev",t])}function g(e){const t=getObj("card",e.get("_cardid"));log(["newCard",t])}function y(e){const t=getObj("card",e._cardid);log(["drawCard",t])}c[u.cmd]=u,on("ready",()=>{state.MineBall||(state.MineBall={version:1,players:i,commandList:c}),on("chat:message",p),on("change:graphic",h),on("add:graphic",f),on("change:card",b),on("add:card",g),on("draw:card",y)})}]);