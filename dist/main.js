!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);class o{constructor(e,t,n,o){this.id=e,this.url=t,this.name=n,this.tag=o}}class r{contructor(e){this.id=e,this.emblem=null,this.deck=[]}getId(){return this.id}getEmblem(){return this.emblem}setEmblem(e){this.emblem=e}getDeck(){return this.deck}setDeck(e){this.deck=e}}class a{constructor(){this.helpParam="--help"}}let s=null;const l={};function i(e){const t=s.filter(e=>!(e.name in l)).map(e=>{const{name:t,url:n}=e;return`<p><a href='!mineball emblem ${t}'><img width='30' src='${n}' /> ${t}</a></p>`}).join("");sendChat("Mine Ball Help",`/w ${e} <p>Choose from one of the available emblems below.</p>\n    <p>You cannot choose an emblem if another player has already selected it.</p>\n    <p>Click the emblem you'd like to choose to represent you.</p>\n    ${t}`)}on("ready",()=>{s=JSON.parse(Campaign().get("token_markers")).map(e=>new o(e.id,e.url,e.name,e.tag))});function c(e,t){if(t.length<20)throw new Error("There are not enough cards left to make a new Player Deck.");const n=function e(t){const n=Object.keys(t);for(;n.lengh>0;){const o=Math.floor(Math.random()*n.lengh-1),r=n.splice(o,1);e[r]=t[r]}return{}}(t).splice(0,20);e.setDeck(n);const o=Object.keys(t);return t.map((e,t)=>!(o[t]in n))}const m={},d={};let u={};const h=new class extends a{constructor(e){super(),this.cmd="help",this.desc="<p>Provides general help, and a list of all commands.",this.paramList=[],this.func=(t,n,o,r)=>{log(e);const a=Object.keys(e).map(t=>function(e){const t=e.paramList.join(" ");return`<hr><pre>!mineball ${e.cmd} ${t}</pre><p>${e.desc}</p>`}(e[t])).join("");sendChat("Mine Ball Help",`/w ${n} <p>Below is a list of commands available to you, for this game.</p>\n        <p>\n          If you provide <code>${this.helpParam}</code> after some commands, it will provide additional details.\n          Example:\n        </p>\n        <pre>!minecraft emblem ${this.helpParam}</pre>\n        ${a}`)}}}(d);d[h.cmd]=h;const p=new class extends a{constructor(e){super(),function(e){Object.keys(e).forEach(t=>{const n=e[t].getEmblem();l[n.name]=n})}(e);const t=e;this.cmd="emblem",this.desc=`Command is used to join the game, and declare/change what emblem will represent you as a player.\n      The emblem will be represented on all of your cards. (${this.helpParam} avail)`,this.paramList=["emblemName"],this.func=function(n,o,a,l){if(l.includes(this.helpParam))return i(o),e;const c=l.shift(),m=s.map(e=>e.name).indexOf(c);if(void 0===c||-1===m)return sendChat("Mine Ball Error",`/w ${o} Need to provide a valid Emblem choice.`),i(o),e;a in e||(t[a]=new r(a));const d=e[a];return d.setEmblem(s[m]),sendChat("Emblem Choosen",`/w ${o} You are now <img width='30' src='${d.getEmblem().url}'>`),t}}}(m);d[p.cmd]=p;const f=new class extends a{constructor(e){super(),this.cmd="whoami",this.desc="Informs you of which emblem belongs to you, and thereby which cards you should control.",this.paramList=[],this.func=(t,n,o,r)=>{if(o in e){const t=e[o];sendChat("",`/w ${n} You are <img width='30' src='${t.getEmblem().url}'>`)}else sendChat(n,"You are not yet a player in the game. Use the <code>!mineball help</code>\n          command to understand how to join.")}}}(m);function b(e){if("api"!==e.type)return;const t=(getObj("player",e.playerid)||{get:()=>"API"}).get("_displayname"),n=e.playerid,o=e.content.split(/\s+/);if("!mineball"!==o.shift()||0===o.length)return;let a;switch(o.shift().toLowerCase()){case p.cmd:Object.assign(m,p.func(e,t,n,o)),a=m[n]||null,typeof a==typeof r&&null===a.getDeck()&&(u=c(m[n],u));break;case f.cmd:f.func(e,t,n,o);break;case h.cmd:default:h.func(e,t,n,o)}}function g(e,t){log(["movement token",e]),log(["movement tokenPrev",t])}function y(e){log(["newToken",e])}function w(e,t){log(["movement card",e]),log(["movement cardPrev",t])}function v(e){const t=getObj("card",e.get("_cardid"));log(["newCard",t])}d[f.cmd]=f,on("ready",()=>{state.MineBall?Object.assign(m,state.MineBall.players):state.MineBall={version:1,players:m},on("chat:message",b),on("change:graphic",g),on("add:graphic",y),on("change:card",w),on("add:card",v);const e=findObjs({type:"deck",name:"Mine Ball"});log(e)})}]);