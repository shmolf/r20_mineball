!function(e){var t={};function n(r){if(t[r])return t[r].exports;var s=t[r]={i:r,l:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(r,s,function(t){return e[t]}.bind(null,s));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);class r{constructor(e,t,n,r){this.id=e,this.url=t,this.name=n,this.tag=r}}class s{contructor(e){this.id=e,this.emblem=null}getId(){return this.id}getEmblem(){return this.emblem}setEmblem(e){this.emblem=e}}class a{constructor(){this.helpParam="--help"}}let o=null;function l(){const e=o.map(e=>(e=>`<p><img width='30' src='${e.url}'>\n    <code style='border-radius: 0.25em; user-select: all; border: solid black 1px;'>${e.name}</code></p>`)(e)).join("");sendChat("Mine Ball Help","<p>Choose from one of the available emblems below.</p>\n    <p>You cannot choose an emblem if another player has already selected it.</p>\n    <p>To select an emblem, type\n      <code style='background: #F5F5DC'>!mineball emblem &lt;your selection&gt;</code> in the messages. Example:</p>\n    <pre style='background: #F5F5DC; user-select: all; -webkit-user-select: all'>!mineball emblem three-leaves</pre>\n    "+e)}on("ready",()=>{o=JSON.parse(Campaign().get("token_markers")).forEach(e=>new r(e.id,e.url,e.name,e.tag))});let i={};const c={},m=new class extends a{constructor(e){super(),this.cmd="help",this.desc="<p>Provides general help, and a list of all commands.",this.paramList=[],this.func=(t,n,r,s)=>{log(e);const a=Object.keys(e).map(t=>function(e){const t=e.paramList.join(" ");return`<hr><pre>!mineball ${e.cmd} ${t}</pre><p>${e.desc}</p>`}(e[t])).join("");sendChat("Mine Ball Help",`<p>Below is a list of commands available to you, for this game.</p>\n        <p>If you provide \`${this.helpParam}\` after some commands, it will provide additional details. Example:</p>\n        <pre>!minecraft emblem ${this.helpParam}</pre>\n        ${a}`)}}}(c);c[m.cmd]=m;const d=new class extends a{constructor(e){super();const t=e;this.cmd="emblem",this.desc=`Command is used to join the game, and declare/change what emblem will represent you as a player.\n      The emblem will be represented on all of your cards. (${this.helpParam} avail)`,this.paramList=["emblemName"],this.func=function(n,r,a,i){if(i.includes(this.helpParam))return l(),e;const c=i.shift(),m=o.map(e=>e.name).indexOf(c);if(void 0===c||-1===m)return sendChat(r,"Need to provide a valid Emblem choice."),l(),e;a in e||(t[a]=new s(a));const d=e[a];return d.setEmblem(o[m]),sendChat(r,`You are now <img width='30' src='${d.getEmblem().url}'>`),t}}}(i);c[d.cmd]=d;const u=new class extends a{constructor(e){super(),this.cmd="whoami",this.desc="Informs you of which emblem belongs to you, and thereby which cards you should control.",this.paramList=[],this.func=(t,n,r,s)=>{if(r in e){const t=e[r];sendChat(n,`You are <img width='30' src='${t.getEmblem().url}'>`)}else sendChat(n,"You are not yet a player in the game. Use the <code>!mineball help</code>\n          command to understand how to join.")}}}(i);c[u.cmd]=u;const p=e=>{if("api"!==e.type)return;const t=(getObj("player",e.playerid)||{get:()=>"API"}).get("_displayname"),n=e.playerid,r=e.content.split(/\s+/);if("!mineball"!==r.shift()||0===r.length)return;const s=r.shift();switch(s){case d.cmd:i=c[s].func(e,t,n,r);break;case u.cmd:c[s].func(e,t,n,r);break;case m.cmd:default:m.func(e,t,n,r)}};on("ready",()=>{on("chat:message",p)})}]);